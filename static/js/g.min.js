function UpdateSocketConnections() {
    socket.removeConnectionFromgroup(socketState.commonGroupArray);
    socketState.commonGroupArray = [];
    betSlipData = JSON.parse(localStorage.getItem("betSlipData"));
    betSlipData === null && (betSlipData = []);
    socketGroups.createBetSlipFixtureGroup(socketState.commonGroupArray, betSlipData);
    socketGroups.createSocketEventsFixtureGroup(socketState.commonGroupArray);
    socket.addConnectionToGroup(socketState.commonGroupArray)
}

function getDecimalOddsValue(n) {
    if (n !== null && n !== undefined) {
        if (n.toString().indexOf(".") > -1) {
            var t = n.toString().split("."),
                i = t[1].length;
            return i > 1 ? n : n.toFixed(2)
        }
        return n.toFixed(2)
    }
}

function updateUIOddsInBetSlip() {
    var n = JSON.parse(localStorage.getItem("betSlipData")),
        f = localStorage.getItem("acceptHigherOdds"),
        e = localStorage.getItem("acceptAnyOdds"),
        t, i, r;
    if (n !== null && n !== undefined && n.length > 0) {
        for (t = 0; t < n.length; t++)
            if (i = document.getElementById("highlightOdds_" + n[t].selectionId),
                r = document.getElementById("highlightBet_" + n[t].selectionId),
                i !== null && i !== undefined && r !== null && r !== undefined) {
                odds = r.children.length > 1 ? getDecimalOddsValue(r.children[1].textContent.trim()) : getDecimalOddsValue(r.innerText.trim());
                let f = r.getAttribute("onclick");
                if (f = "[" + f.substring(17, f.length + 1).split("}")[0] + "}]",
                    f = JSON.parse(f.replaceAll("'", '"')), !i.classList.contains("SB-btnOddsDisabled") && n[t].selectionId !== null && n[t].selectionId !== undefined) {
                    n[t].odds = odds;
                    n[t].priceId = f[0].priceId;
                    var i = document.getElementById("highlightOdds_" + n[t].selectionId),
                        u = document.getElementById("oddsSelectionId_" + n[t].selectionId),
                        o = document.getElementById("getBetSlipliveScores_" + n[t].selectionId);
                    u !== null && i !== null && (Number(odds) > Number(u.innerHTML) ? (i.classList.remove("SB-betSlip-oddsDecreased"),
                            i.classList.add("SB-betSlip-oddsIncreased")) : Number(odds) < Number(u.innerHTML) && (i.classList.remove("SB-betSlip-oddsIncreased"),
                            i.classList.add("SB-betSlip-oddsDecreased")),
                        u.innerHTML = n[t].odds);
                    localStorage.setItem("betSlipData", JSON.stringify(n))
                }
            }
        updateBetslip(!0)
    }
}
var bannerOne = null,
    bannerTwo = null,
    bannerThree = null,
    bannerFour = null,
    lengthOfOther = 0,
    kenyagoliathjackpotsmallbanner = "",
    kenyadailyjackpotsmallbanner = "",
    kenyapicksixsmallbanner = "",
    kenyazerodatasmallbanner = "",
    kenyagoliathjackpotbigbanner = "",
    kenyadailyjackpotbigbanner = "",
    kenyapicksixbigbanner = "",
    hideRightAndLeftContentForCasino = document.getElementsByClassName("SB-Lite-Mobile"),
    i, splideCarousel, sessionState;
if (hideRightAndLeftContentForCasino !== null && window.location.href.toLowerCase().indexOf("casino") <= -1)
    for (i = 0; i < hideRightAndLeftContentForCasino.length; i++)
        hideRightAndLeftContentForCasino[i].classList.remove("SB-casinoPage");
splideCarousel = {
    superBannerCarousel: function() {
        var n = document.getElementsByClassName("SB-splide-superBanner");
        n.length > 0 && new Splide(".SB-splide-superBanner", {
            type: "loop",
            pagination: !0,
            arrows: !0,
            autoplay: !0
        }).mount()
    },
    casinoBannerCarousel: function() {
        var n = document.getElementsByClassName("SB-splide-casinoBanner");
        n.length > 0 && new Splide(".SB-splide-casinoBanner", {
            type: "loop",
            pagination: !0,
            arrows: !0,
            autoplay: !0
        }).mount()
    },
    populatMatchCarousel: function() {
        var n = document.getElementsByClassName("SB-splide-popularMatches");
        n.length > 0 && new Splide(".SB-splide-popularMatches", {
            type: "false",
            autoWidth: !0,
            pagination: !1,
            arrows: !1,
            cover: !0,
            autoWidth: !0
        }).mount()
    },
    livenowSportsHeaderCarousel: function() {
        var n = document.getElementsByClassName("SB-sportCategoryList-liveNow");
        n.length > 0 && new Splide(".SB-sportCategoryList-liveNow", {
            type: "false",
            autoWidth: !0,
            pagination: !1,
            arrows: !1,
            cover: !0,
            autoWidth: !0
        }).mount()
    },
    eventMarketsCarousel: function() {
        var n = document.getElementsByClassName("SB-eventMarketGroupList");
        n.length > 0 && new Splide(".SB-eventMarketGroupList", {
            type: "false",
            autoWidth: !0,
            pagination: !1,
            arrows: !1,
            cover: !0,
            autoWidth: !0
        }).mount()
    },
    casinoCategoryCarousel: function() {
        var n = document.getElementsByClassName("SB-splide-casinoCategoryList");
        n.length > 0 && new Splide(".SB-splide-casinoCategoryList", {
            type: "false",
            autoWidth: !0,
            pagination: !1,
            arrows: !1,
            cover: !0,
            autoWidth: !0
        }).mount()
    }
};
sessionState = {
    session: {
        token: "",
        userId: "",
        clientId: "",
        betSlipList: [],
        userFavorites: [],
        currencyCode: "",
        languageCode: "",
        viewType: "",
        showOddsType: "",
        higherOdds: "",
        acceptAnyOdds: ""
    },
    localStorageAvailable: !0,
    getBetSlipList: function() {
        return this.localStorageAvailable && (this.session.betSlipList = JSON.parse(localStorage.getItem("betSlipData"))),
            this.session.betSlipList
    },
    setBetSlipList: function(n) {
        this.session.betSlipList = n;
        this.localStorageAvailable && localStorage.setItem("betSlipData", JSON.stringify(n))
    },
    getHigherOdds: function() {
        return this.localStorageAvailable && (this.session.higherOdds = localStorage.getItem("acceptHigherOdds")),
            this.session.higherOdds
    },
    setHigherOdds: function(n) {
        this.session.higherOdds = n;
        this.localStorageAvailable ? localStorage.setItem("acceptHigherOdds", n) : this.saveSessionStateToParentWindow()
    },
    getAcceptAnyOdds: function() {
        return this.localStorageAvailable && (this.session.acceptAnyOdds = localStorage.getItem("acceptAnyOdds")),
            this.session.acceptAnyOdds
    },
    setAcceptAnyOdds: function(n) {
        this.session.acceptAnyOdds = n;
        this.localStorageAvailable ? localStorage.setItem("acceptAnyOdds", n) : this.saveSessionStateToParentWindow()
    }
};