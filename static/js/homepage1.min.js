function createCookie(n, t, i) {
    var u, r;
    i ? (r = new Date,
        r.setTime(r.getTime() + i * cookieExpiryHours * cookieExpiryMinutes * 6e4),
        u = "; expires=" + r.toGMTString()) : u = "";
    document.cookie = n + "=" + t + u + "; path=/"
}

function readCookie(n) {
    for (var t, r = n + "=", u = document.cookie.split(";"), i = 0; i < u.length; i++) {
        for (t = u[i]; t.charAt(0) === " ";)
            t = t.substring(1, t.length);
        if (t.indexOf(r) === 0)
            return t.substring(r.length, t.length)
    }
    return null
}

function HomepageOnLoadFunction() {
    var i = document.getElementById("ddn_upcomingdayfilters"),
        r, u, n, t;
    i !== null && (i.value = "Today");
    initialLoadAccordian();
    mainTabsCSS(null, !0);
    HomeupcomingSubMarketfilterCSS(null);
    highlightgamefilterCSS(null);
    updatetoLocalTimeZone();
    updateOddsIncDec();
    r = document.querySelectorAll(".tabList li");
    fnactiveCSS(r, globalConfig.defaultHomeTabIndex);
    u = document.querySelectorAll(".footerItemsDisplayListWithLogin li");
    fnactiveCSS(u, -1);
    readCookie("balance") !== null && Number(readCookie("balance")) === 0 && readCookie("depositPopUp") === null ? createCookie("depositPopUp", !0, 1) : document.body.classList.remove("BLM-noScroll");
    SpecialsCountdown();
    Highlight_updatetoLocalTimeZone();
    document.querySelectorAll(".SB-selectAuto select").forEach(resizeSelect);
    document.body.addEventListener("change", n => {
        n.target.matches(".SB-selectAuto select") && resizeSelect(n.target)
    });
    n = document.getElementById("showSubMarketsList");
    n !== null && (n.style.display = "none");
    t = document.getElementById("showLiveSubMarketsList");
    t !== null && (t.style.display = "none")
}

function Highlight_updatetoLocalTimeZone() {
    for (var i, u, t, f = [getJanMonth, getFebMonth, getMarMonth, getAprMonth, getMayMonth, getJunMonth, getJulMonth, getAugMonth, getSepMonth, getOctMonth, getNovMonth, getDecMonth], r = document.querySelectorAll(".datetime"), n = 0; n < r.length; n++)
        (document.querySelectorAll(".datetime")[n] !== null || document.querySelectorAll(".datetime")[n] === "undefined") && (i = document.querySelectorAll(".datetime")[n].attributes["date-attribute"].value,
            i = i.replace("T", ""),
            u = i + " UTC",
            t = new Date(u),
            getEXactYear = t.getFullYear(),
            getExactDate = addZero(t.getDate()),
            getExactTime = addZero(t.getHours()) + ":" + addZero(t.getMinutes()),
            r[n].innerHTML = "" + getExactDate + " " + f[t.getMonth()] + "<br/> " + getExactTime + "")
}

function updatetoLocalTimeZone() {
    for (var r, s = [getJanMonth, getFebMonth, getMarMonth, getAprMonth, getMayMonth, getJunMonth, getJulMonth, getAugMonth, getSepMonth, getOctMonth, getNovMonth, getDecMonth], f = document.querySelectorAll(".SB-match__kickOffInfo,.showUTC"), u = 0; u < f.length; u++) {
        var e = f[u].attributes["data-datetime"].value,
            o = e + " UTC",
            n = new Date(o),
            t = new Date,
            i = f[u].children;
        n.getFullYear() === t.getFullYear() && n.getMonth() === t.getMonth() && n.getDate() === t.getDate() ? (r = addZero(n.getHours()) + ":" + addZero(n.getMinutes()),
            i[0].innerHTML = r,
            i[1].innerHTML = getTodayLabelName) : n.getFullYear() === t.getFullYear() && n.getMonth() === t.getMonth() && n.getDate() - t.getDate() == 1 ? (r = addZero(n.getHours()) + ":" + addZero(n.getMinutes()),
            i[0].innerHTML = r,
            i[1].innerHTML = getTomorrowLabelName) : (getEXactYear = n.getFullYear(),
            getExactDate = addZero(n.getDate()),
            r = addZero(n.getHours()) + ":" + addZero(n.getMinutes()),
            i[0].innerHTML = r,
            i[1].innerHTML = getExactDate + "/" + addZero(n.getMonth() + 1))
    }
}

function updateOddsIncDec() {
    var t = document.getElementsByClassName("btn BLM-btnOdds"),
        n, i;
    if (t.length > 0)
        for (n = 0; n < t.length; n++)
            t[n].attributes["odds-incdec"] !== undefined && (t[n].className === "btn BLM-btnOdds" || t[n].className === "btn BLM-btnOdds " || t[n].className === "btn BLM-btnOdds BLM-btnOdds-highlight") && (i = t[n].attributes["odds-incdec"].value,
                i === "I" ? t[n].classList.add("BLM-btnOddsIncreased") : i === "D" ? t[n].classList.add("BLM-btnOddsDecreased") : (t[n].classList.remove("BLM-btnOddsIncreased"),
                    t[n].classList.remove("BLM-btnOddsDecreased")),
                setTimeout(function() {
                    t[n] !== undefined && (t[n].classList.remove("BLM-btnOddsIncreased"),
                        t[n].classList.remove("BLM-btnOddsDecreased"))
                }, 5e3))
}

function addZero(n) {
    return n < 10 ? "0" + n : n
}

function fnactiveCSS(n, t) {
    for (var i = 0; i < n.length; i++)
        i === t ? n[i].classList.add("active") : n[i].classList.remove("active")
}

function myStickyHeaderFunction() {
    document.body.scrollTop > 1 || document.documentElement.scrollTop > 1 ? document.body.classList.add("SB-sticky-layoutHeader") : document.body.classList.remove("SB-sticky-layoutHeader")
}

function HomePageCarousel() {
    homeBanner === null && (homeBanner = new Siema({
            selector: ".BLM-mainBanner-carousel",
            duration: 200,
            easing: "ease-out",
            perPage: 1,
            startIndex: 0,
            draggable: !0,
            multipleDrag: !0,
            threshold: 20,
            loop: !0,
            rtl: !1,
            onInit: () => {},
            onChange: () => {}
        }),
        setInterval(() => homeBanner.next(), 4e3))
}

function initSlider(n) {
    var r, f, u, e, i, t;
    for (n.selector.dataset.intervalId = setInterval(n => {
            n.next()
        }, 5e3, n),
        r = n.selector.parentNode, ["mouseover", "touchstart"].forEach(function(t) {
            r.addEventListener(t, () => {
                clearInterval(n.selector.dataset.intervalId)
            })
        }), ["mouseleave", "touchend", "touchcancel"].forEach(function(t) {
            r.addEventListener(t, () => {
                n.selector.dataset.intervalId = setInterval(n => {
                    n.next()
                }, 5e3, n)
            })
        }),
        f = r.getElementsByClassName("indicators"),
        u = 0; u < f.length; u++)
        for (e = f[u],
            i = 0; i < n.innerElements.length; i++)
            t = document.createElement("div"),
            t.classList.add("indicator"),
            t.dataset.index = i,
            i === 0 && t.classList.add("active"),
            t.addEventListener("click", t => {
                n.goTo(t.currentTarget.dataset.index)
            }),
            e.appendChild(t)
}

function sliderChanged(n) {
    for (var r, t, f = n.selector.parentNode, u = f.getElementsByClassName("indicators"), i = 0; i < u.length; i++)
        for (r = u[i],
            t = 0; t < n.innerElements.length; t++)
            t === n.currentSlide ? r.childNodes[t].classList.add("active") : r.childNodes[t].classList.remove("active")
}

function getUpcomingLeagueId() {
    var n = document.getElementById("ddn_leagues"),
        t, i;
    t = n !== null && n !== undefined ? n.options[n.selectedIndex].value : "AllLeagues";
    i = document.getElementById("ddn_upcomingdayfilters").value;
    i !== "all" ? (document.getElementById("ddn_upcomingdayfilters").value = "all",
        UpcomingTime()) : GetUpcomingleagueID(t)
}

function GetUpcomingleagueID(n) {
    var t = document.querySelectorAll("[data-leagueid]"),
        r = document.querySelectorAll('[data-leagueid="' + n + '"]'),
        i;
    r.length > 0 ? UpcomingHideAndShowLeagues(n, t) : n !== "AllLeagues" ? (i = "9999",
        UpcomingHideAndShowLeagues(i, t)) : UpcomingHideAndShowLeagues(n, t)
}

function UpcomingHideAndShowLeagues(n, t) {
    if (n !== null && n !== undefined)
        for (var i = 0; i < t.length; i++)
            n !== "AllLeagues" ? t[i].attributes["data-leagueid"].value !== n ? t[i].classList.add("d-none") : t[i].classList.remove("d-none") : t[i].attributes["data-leagueid"].value !== "9999" ? t[i].classList.remove("d-none") : t[i].classList.add("d-none")
}

function UpcomingMarkets() {
    var n = document.getElementById("ddn_datatype"),
        r = n.options[n.selectedIndex].value,
        t = document.getElementById("ddn_upcomingmarkets"),
        i = t.options[t.selectedIndex].value,
        o = document.getElementById("ddn_upcomingdayfilters"),
        u = document.querySelectorAll(".SB-tabs-boxed .active")[0].parentNode.innerText,
        f = document.querySelectorAll(".upcomingsubMarketList .active")[0].getAttribute("value"),
        e = document.getElementById("showSubMarketsList");
    e.style.display = i === "Over/Under" ? "block" : "none";
    getUpcomingevent("", i, u, f, r, null);
    updateOddsIncDec();
    betslipHighlight()
}

function getHomeUpcomingsubmarket(n) {
    var t = document.getElementById("ddn_datatype"),
        u = t.options[t.selectedIndex].value,
        i = n.target.getAttribute("value"),
        r = document.getElementById("ddn_upcomingmarkets"),
        f = r.options[r.selectedIndex].value,
        o = document.getElementById("ddn_upcomingdayfilters"),
        e = document.querySelectorAll(".SB-tabs-boxed .active")[0].parentNode.innerText;
    HomeupcomingSubMarketfilterCSS(i);
    getUpcomingevent("", f, e, i, u, null);
    updateOddsIncDec();
    betslipHighlight()
}

function UpcomingTime() {
    var n = document.getElementById("ddn_datatype"),
        r = n.options[n.selectedIndex].value,
        t = document.getElementById("ddn_upcomingdayfilters"),
        u = t.options[t.selectedIndex].value,
        i = document.getElementById("ddn_upcomingmarkets"),
        f = i.options[i.selectedIndex].value,
        e = document.querySelectorAll(".upcomingsubMarketList .active")[0].getAttribute("value");
    getUpcomingevent("", f, u, e, r, null);
    updateOddsIncDec();
    betslipHighlight()
}

function getBetBuilderData() {
    var r = document.getElementById("home-popular");
    r !== null && r.classList.add("d-none");
    var t = document.getElementById("ddn_betbuilderdatatype"),
        u = t.selectedIndex,
        f = t.options[t.selectedIndex].value,
        i = document.getElementById("ddn_betbuilderdayfilters"),
        e = i.selectedIndex,
        o = i.options[i.selectedIndex].value,
        s = "/Home/BetBuilderTab?filterdate=" + o + "&filterleague=" + f + "&istabevent=true",
        n = new XMLHttpRequest;
    n.open("GET", s, !0);
    n.onload = function() {
        var i, r, t, f, o, s;
        n.status >= 200 && n.status < 400 && (i = JSON.parse(n.responseText),
            r = document.getElementById("enabledLoader"),
            r !== null && r.classList.add("d-none"),
            t = document.getElementById("home-betBuilder"),
            t !== null && (t.innerHTML = i.home_bbfilterButtons + i.betBuilder_Data,
                t.classList.remove("d-none"),
                f = document.getElementById("ddn_betbuilderdatatype"),
                o = document.getElementById("ddn_betbuilderdayfilters"),
                f.selectedIndex = u,
                o.selectedIndex = e,
                resizeSelect(f),
                resizeSelect(o),
                bbupdatetoLocalTimeZone()),
            s = document.querySelectorAll(".tabList li"),
            fnactiveCSS(s, 1))
    };
    n.send()
}

function bbupdatetoLocalTimeZone() {
    var f = [getJanMonth, getFebMonth, getMarMonth, getAprMonth, getMayMonth, getJunMonth, getJulMonth, getAugMonth, getSepMonth, getOctMonth, getNovMonth, getDecMonth],
        n = document.getElementsByClassName("SB-kickOff"),
        t;
    if (n !== null && n !== undefined)
        for (t = 0; t < n.length; t++) {
            var r = n[t].innerHTML.replace("_", " "),
                u = r + " UTC",
                i = new Date(u),
                e = new Date;
            getEXactYear = i.getFullYear();
            getExactDate = addZero(i.getDate());
            getExactTime = addZero(i.getHours()) + ":" + addZero(i.getMinutes());
            n[t].innerHTML = getExactDate + "/" + addZero(i.getMonth() + 1) + "/" + getEXactYear + " " + getExactTime
        }
}

function betslipHighlight() {
    var t, n;
    if (betSlipData = JSON.parse(localStorage.getItem("betSlipData")),
        betSlipData === null ? (betSlipData = [],
            localStorage.setItem("betSlipData", JSON.stringify(betSlipData))) : betSlipData = JSON.parse(localStorage.getItem("betSlipData")),
        t = document.getElementById("getBetsCountDisplay"),
        t.innerHTML = betSlipData.length,
        betSlipData.length > 0)
        for (n = 0; n < betSlipData.length; n++)
            document.getElementById("highlightBet_" + betSlipData[n].selectionId) !== null && betSlipData[n].selectionId !== "" && document.getElementById("highlightBet_" + betSlipData[n].selectionId).classList.add("active")
}

function HomeupcomingSubMarketfilterCSS(n) {
    var t = document.querySelectorAll(".upcomingsubMarketList li");
    n === null || n === "Total Goals 0.5" ? fnactiveCSS(t, 0) : n === "Total Goals 1.5" ? fnactiveCSS(t, 1) : n === "Total Goals 2.5" ? fnactiveCSS(t, 2) : n === "Total Goals 3.5" && fnactiveCSS(t, 3)
}

function getUpcomingevent(n, t, i, r, u, f) {
    var s = document.getElementById("home-popular"),
        o, h, e;
    s !== null && s.classList.remove("d-none");
    o = document.getElementById("home-betBuilder");
    o !== null && o.classList.add("d-none");
    h = "/Home/UpcomingTab?marketName=" + t + "&time=" + i + "&submarket=" + r + "&pageIndex=" + f + "&istabevent=true&redisKeyType=" + u + "";
    e = new XMLHttpRequest;
    e.open("GET", h, !0);
    e.onload = function() {
        var n, i, u;
        e.status >= 200 && e.status < 400 && (n = document.getElementById("enabledLoader"),
            n !== null && n.classList.add("d-none"),
            document.getElementsByClassName("SB-leagueBox-group").length > 0 ? document.getElementsByClassName("SB-leagueBox-group")[0].innerHTML = JSON.parse(e.responseText).upcoming_Data : document.getElementsByClassName("SB-tab-pane active")[0].innerHTML = JSON.parse(e.responseText).upcoming_Data,
            i = document.getElementById("showSubMarketsList"),
            i !== null && t !== "Over/Under" && (i.style.display = "none"),
            HomeupcomingSubMarketfilterCSS(r),
            updatetoLocalTimeZone(),
            betslipHighlight(),
            u = document.querySelectorAll(".tabList li"),
            fnactiveCSS(u, 0),
            hideFreeBets(freeBetDetails),
            updateOddsIncDec(),
            UpdateSocketConnections())
    };
    e.send()
}

function highlightGames(n) {
    var t = n.target.getAttribute("value"),
        i;
    getHighlightsEvent(t);
    i = document.getElementById("ShowSubTopGames");
    i.style.display = t.toLowerCase() === "topgames" ? "block" : "none";
    updateOddsIncDec()
}

function highlightgamefilterCSS(n) {
    var t = document.querySelectorAll(".PopularTabslist li");
    n === null || n.toLowerCase() === "topgames" ? fnactiveCSS(t, 1) : n.toLowerCase() === "trending" ? fnactiveCSS(t, 2) : n.toLowerCase() === "topleagues" && fnactiveCSS(t, 0)
}

function getHomepopularsubgames(n) {
    var t = n.target.getAttribute("value"),
        r = n.target.className,
        i;
    if (r == "active") {
        n.target.classList.remove("active");
        highkightedOddsList = document.querySelectorAll(".btn.BLM-btnOdds.active");
        highkightedOddsList.forEach(function(n) {
            n.classList.remove("active")
        });
        localStorage.setItem("betSlipData", JSON.stringify([]));
        i = document.getElementById("getBetsCountDisplay");
        i.innerHTML = 0;
        return
    }
    popularSubMarketfilterCSS(t);
    initialLoadAccordian();
    highlightLowestOddspick(t);
    updateOddsIncDec()
}

function popularSubMarketfilterCSS(n) {
    var t = document.querySelectorAll(".topGamesSubFilters li");
    n === null || n.toLowerCase() === "acca5" ? fnactiveCSS(t, 0) : n.toLowerCase() === "acca7" ? fnactiveCSS(t, 1) : n.toLowerCase() === "acca9" ? fnactiveCSS(t, 2) : n.toLowerCase() === "acca11" ? fnactiveCSS(t, 3) : n.toLowerCase() === "acca13" ? fnactiveCSS(t, 4) : n.toLowerCase() === "acca15" ? fnactiveCSS(t, 5) : n.toLowerCase() === "acca18" ? fnactiveCSS(t, 6) : n.toLowerCase() === "acca20" && fnactiveCSS(t, 7)
}

function highlightLowestOddspick(n) {
    for (var k, r, v, u, y, i, f, c, p, nt, l = 0, e, w = 0, b = document.querySelectorAll(".BLM-matchBox"), a = 0; a < b.length; a++)
        if (w < selectionMatchCount) {
            k = {};
            r = b[a];
            k.matchId = r.firstElementChild.getAttribute("attr-matchid");
            var tt = [],
                t = [],
                o = [],
                d = !1;
            for (e = r.firstElementChild.getAttribute("attr-marketids"),
                v = e.includes(",") ? e.split(",") : e,
                o = v.length > 1 ? r.querySelectorAll(".BLM-btnOddsGroup") : r.querySelectorAll(".BLM-outcomeDetails"),
                u = 0; u < v.length; u++) {
                for (t = o.length > 1 ? o[u].querySelectorAll("ul li") : o[u].querySelectorAll("ul li"),
                    y = parseFloat(Number.MAX_SAFE_INTEGER),
                    i = -1,
                    f = 0; f < t.length; f++) {
                    var g = t[f],
                        s = {},
                        it = g.querySelector(".BLM-btnOdds"),
                        h = parseFloat(g.getAttribute("attr-Odds"));
                    h > oddsThresholdValue && h < y && (d = !0,
                        y = h,
                        i = f,
                        mappedIndex = l);
                    s.Ratio = parseFloat(h);
                    s.isSelected = !1;
                    s.index = l;
                    tt.push(s);
                    l++
                }
                d && (w++,
                    t[i].children[0].attributes["data-betSlip"].value !== "" && t[i].children[0].attributes["data-betslipSelectionId"].value !== "" && t[i].children[0].classList.value.indexOf("active") > -1 && (c = t[i].children[0].attributes["data-betSlip"].value,
                        p = t[i].children[0].attributes["data-betslipSelectionId"].value,
                        c && c != "undefined" && t[i].children[0].id === "highlightBet_" + p && (nt = JSON.parse(c),
                            addBetsToBetSlip(nt, p))))
            }
        }
    getSubGamesList(n)
}

function getSubGamesList(n) {
    var i, t;
    for (validHighlightMatchCount = 0,
        i = document.querySelectorAll(".BLM-matchBox"),
        t = 0; t < i.length; t++)
        objAccaSelections.hasOwnProperty(n.toLowerCase()) !== undefined && validHighlightMatchCount < objAccaSelections[n.toLowerCase()] && InitialLoadSubGamesHighlight(i[t])
}

function InitialLoadSubGamesHighlight(n) {
    var l = 0,
        f, e = n,
        a, r, v, i, u, c, y, b;
    ({}).matchId = e.firstElementChild.getAttribute("attr-matchid");
    var k = [],
        t = [],
        o = [],
        p = !1;
    for (f = e.firstElementChild.getAttribute("attr-marketids"),
        a = f.includes(",") ? f.split(",") : f,
        o = a.length > 1 ? e.querySelectorAll(".BLM-btnOddsGroup") : e.querySelectorAll(".BLM-outcomeDetails"),
        r = 0; r < a.length; r++) {
        for (t = o.length > 1 ? o[r].querySelectorAll("ul li") : o[r].querySelectorAll("ul li"),
            v = parseFloat(Number.MAX_SAFE_INTEGER),
            i = -1,
            u = 0; u < t.length; u++) {
            var w = t[u],
                s = {},
                d = w.querySelector(".BLM-btnOdds"),
                h = parseFloat(w.getAttribute("attr-Odds"));
            h > oddsThresholdValue && h < v && (p = !0,
                v = h,
                i = u,
                mappedIndex = l);
            s.Ratio = parseFloat(h);
            s.isSelected = !1;
            s.index = l;
            k.push(s);
            l++
        }
        p && (validHighlightMatchCount++,
            t[i].children[0].attributes["data-betSlip"].value !== "" && t[i].children[0].attributes["data-betslipSelectionId"].value !== "" && (c = t[i].children[0].attributes["data-betSlip"].value,
                y = t[i].children[0].attributes["data-betslipSelectionId"].value,
                c && c != "undefined" && t[i].children[0].id === "highlightBet_" + y && (b = JSON.parse(c),
                    addBetsToBetSlip(b, y))))
    }
}

function getHighlightsEvent(n) {
    const i = "/Home/PopularTab?marketName=" + n + "&istabevent=true";
    var t = new XMLHttpRequest;
    t.open("GET", i, !0);
    t.onload = function() {
        t.status >= 200 && t.status < 400 && (document.getElementsByClassName("BLM-leagueBox-group").length > 0 ? document.getElementsByClassName("BLM-leagueBox-group")[0].innerHTML = JSON.parse(t.responseText).highlights_Data : document.getElementsByClassName("BLM-tab-pane active")[0].innerHTML = JSON.parse(t.responseText).highlights_Data,
            highlightgamefilterCSS(n),
            initialLoadAccordian(),
            updatetoLocalTimeZone(),
            betslipHighlight(),
            hideFreeBets(freeBetDetails),
            updateOddsIncDec())
    };
    t.send()
}

function removeMeta() {
    var t, n;
    const i = document.getElementsByTagName("meta");
    for (t = 0; t < i.length; t++)
        n = i[t].getAttribute("name"),
        n !== "" && n !== null && n !== "viewport" && document.querySelector("[name='" + n + "']").remove()
}

function mainTabsHighlight(n) {
    n = n !== null ? n.target.innerText : null;
    betslipHighlight();
    var t = mainTabsCSS(tabName_replace)
}

function mainTabsCSS(n) {
    return n === null || n === "upcoming" ? "/" : n === "Live Now" ? "/Home/LiveNow" : n.toLowerCase() === "popular" ? "/Home/Popular" : "/"
}

function getAccordianLiveNow(n) {
    var t = document.getElementById(n);
    t.parentElement.classList.toggle("collapsed")
}

function getAccordianHighlight(n) {
    var t = document.getElementById(n);
    t.parentElement.classList.toggle("collapsed")
}

function SpecialsCountdown() {
    var n = new Date("Oct 12, 2019 07:45:00").getTime(),
        t = setInterval(function() {
            var r = (new Date).getTime(),
                i = n - r,
                u = Math.floor(i / 864e5),
                f = Math.floor(i % 864e5 / 36e5),
                e = Math.floor(i % 36e5 / 6e4),
                o = Math.floor(i % 6e4 / 1e3);
            document.getElementById("BLM-countDown") !== null && (document.getElementById("BLM-countDown").innerHTML = "<span>" + u + "<\/span>d <span>" + f + "<\/span>h<span>" + e + "<\/span>m ");
            i < 0 && (clearInterval(t),
                document.getElementById("BLM-countDown") !== null && (document.getElementById("BLM-countDown").innerHTML = " "))
        }, 1e3)
}

function initialLoadAccordian(n, t) {
    var i, r;
    if (n !== undefined && n.length > 0)
        for (i = 0; i < n.length; i++)
            t !== "AllLeagues" ? n[i].classList.remove("collapsed") : i == 0 ? n[i].classList.remove("collapsed") : n[i].classList.add("collapsed");
    else
        r = document.getElementById("getUpcomingAccordianId_1"),
        r !== null && r.classList.remove("collapsed")
}

function getAccordianUpcoming(n) {
    var t = document.getElementById("getUpcomingAccordianId_" + n);
    t.classList.toggle("collapsed")
}

function getDataTypeDetails() {
    var n = document.getElementById("ddn_datatype"),
        r = n.options[n.selectedIndex].value,
        t = document.getElementById("ddn_upcomingmarkets"),
        i = t.options[t.selectedIndex].value,
        o = document.getElementById("ddn_upcomingdayfilters"),
        u = document.querySelectorAll(".SB-tabs-boxed .active")[0].parentNode.innerText,
        f = document.querySelectorAll(".upcomingsubMarketList .active")[0].getAttribute("value"),
        e = document.getElementById("showSubMarketsList");
    e.style.display = i === "Over/Under" ? "block" : "none";
    getUpcomingevent("", i, u, f, r, null);
    updateOddsIncDec();
    betslipHighlight()
}

function resizeSelect(n) {
    let i = document.createElement("option");
    i.textContent = n.selectedOptions[0].textContent;
    let t = document.createElement("select");
    t.style.visibility = "hidden";
    t.style.position = "fixed";
    t.appendChild(i);
    n.after(t);
    n.style.width = `${+t.clientWidth + 4}px`;
    t.remove()
}

function disableAddToBetslip(n) {
    for (var t, i, u, s, f, h, e, c = document.querySelectorAll("[data-sequence]"), r = [], o = 0; o < c.length; o++) {
        var l = c[o].innerText,
            a = document.getElementById("BBmarketSel_" + l).innerHTML,
            v = document.getElementById("BBMrkt_" + l).innerHTML;
        r.push(v.split("_").join(" ") + ": " + a)
    }
    if (betSlipData = JSON.parse(localStorage.getItem("betSlipData")),
        t = !1,
        betSlipData !== null && betSlipData.length > 0)
        for (let f = 0; f < betSlipData.length; f++) {
            if (t)
                break;
            for (i = 0,
                u = betSlipData[f].marketName.split("&"),
                j = 0; j < r.length; j++)
                if (n.toString() === betSlipData[f].eventId)
                    for (k = 0; k < u.length; k++)
                        r[j].trim() === u[k].trim() && (i += 1);
            i === r.length && i === u.length && i > 0 && (t = !0)
        }
    return t ? (s = document.getElementById("lblAddToBetSlip"),
            f = document.getElementsByClassName("SB-btnAddToBetslip"),
            s !== null && (s.innerHTML = "Added to Betslip"),
            f !== null && f.length > 0 && f[0].classList.add("SB-btnDisabled")) : (h = document.getElementById("lblAddToBetSlip"),
            e = document.getElementsByClassName("SB-btnAddToBetslip"),
            h !== null && (h.innerHTML = "Add to Betslip"),
            e !== null && e.length > 0 && e[0].classList.remove("SB-btnDisabled")),
        t
}

function clearAllBBSelections(n) {
    var f = document.getElementById("BBSelectionGroup"),
        e = document.getElementById("bbTotalOdds"),
        t, o, s, i, r, u;
    e !== null && (e.innerHTML = "");
    f !== null && (f.innerHTML = "");
    t = document.querySelectorAll("[id^=BBdiv_]");
    for (let i = 0; i < t.length; i++)
        t[i].parentElement.classList.contains("collapsed") === !1 && (o = !0,
            s = t[i].id.substr(6),
            getAccordianBetBuilder(t[i].id, s, n, o));
    i = document.getElementById("BBNoMrktSelectionMsg");
    i !== null && i.classList.remove("d-none");
    r = document.getElementById("BBHeaderClearBtn");
    r !== null && r.classList.add("d-none");
    u = document.getElementById("BBAddToBetslipBtn");
    u !== null && u.classList.add("d-none")
}

function Timefilter(n) {
    var t = document.getElementById("ddn_datatype"),
        f = t.options[t.selectedIndex].value,
        e = document.querySelectorAll(".upcomingsubMarketList .active")[0].getAttribute("value"),
        i = document.getElementById("ddn_upcomingmarkets"),
        r = i.options[i.selectedIndex].value,
        s = document.getElementById("ddn_upcomingdayfilters"),
        u = n.currentTarget.innerText,
        o = document.getElementById("showSubMarketsList");
    o.style.display = r === "Over/Under" ? "block" : "none";
    HomeupcomingDayTimefilterCSS(u);
    getUpcomingevent("", r, u, e, f, null);
    updateOddsIncDec();
    betslipHighlight()
}

function gotoPreviousNextUpcoming(n) {
    var t = document.getElementById("ddn_datatype"),
        u = t.options[t.selectedIndex].value,
        i = document.getElementById("ddn_upcomingmarkets"),
        r = i.options[i.selectedIndex].value,
        s = document.getElementById("ddn_upcomingdayfilters"),
        f = document.querySelectorAll(".SB-tabs-boxed .active")[0].parentNode.innerText,
        e = document.querySelectorAll(".upcomingsubMarketList .active")[0].getAttribute("value"),
        o = document.getElementById("showSubMarketsList");
    o.style.display = r === "Over/Under" ? "block" : "none";
    getUpcomingevent("", r, f, e, u, n);
    updateOddsIncDec();
    betslipHighlight()
}

function HomeupcomingDayTimefilterCSS(n) {
    var t = document.querySelectorAll(".SB-tabs-boxed li div");
    n === null || n.toLowerCase() === "today".toLowerCase() ? fnactiveCSS(t, 3) : n.toLowerCase() === "1hr".toLowerCase() ? fnactiveCSS(t, 0) : n.toLowerCase() === "2hrs".toLowerCase() ? fnactiveCSS(t, 1) : n.toLowerCase() === "3hrs".toLowerCase() ? fnactiveCSS(t, 2) : n.toLowerCase() === "All".toLowerCase() && fnactiveCSS(t, 4)
}

function seachOpen() {
    var n = document.getElementById("SB-searchBoxContainer");
    n.style.display = n.style.display === "none" ? "block" : "none"
}
var nextDay, nextAfterDay, homeBanner = null,
    tabName_replace = null,
    topgames_Carousel = null,
    getTodayLabelName = GetDateAndMonthMessages("todayLabelName"),
    getTomorrowLabelName = GetDateAndMonthMessages("tomorrowLabelName"),
    getJanMonth = GetDateAndMonthMessages("janMonth"),
    getFebMonth = GetDateAndMonthMessages("febMonth"),
    getMarMonth = GetDateAndMonthMessages("marMonth"),
    getAprMonth = GetDateAndMonthMessages("aprMonth"),
    getMayMonth = GetDateAndMonthMessages("mayMonth"),
    getJunMonth = GetDateAndMonthMessages("junMonth"),
    getJulMonth = GetDateAndMonthMessages("julMonth"),
    getAugMonth = GetDateAndMonthMessages("augMonth"),
    getSepMonth = GetDateAndMonthMessages("sepMonth"),
    getOctMonth = GetDateAndMonthMessages("octMonth"),
    getNovMonth = GetDateAndMonthMessages("novMonth"),
    getDecMonth = GetDateAndMonthMessages("decMonth"),
    validHighlightMatchCount = 0;
window.onscroll = function() {
    myStickyHeaderFunction()
};
window.onload = HomepageOnLoadFunction(),
    function() {
        mainTabsCSS("popular")
    }();